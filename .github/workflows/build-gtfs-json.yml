name: Build GTFS JSON

on:
  schedule:
    - cron: "15 2 * * *"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build JSON
        env:
          GTFS_URL: https://www.transportforireland.ie/transitData/Data/GTFS_Irish_Rail.zip
          OUT_DIR: out
          WINDOW_DAYS: "90"
        run: python scripts/gtfs_json_builder.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gtfs-json
          path: out/
          if-no-files-found: error

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wrangler v4
        run: npm i -g wrangler@4

      - name: Read version
        id: ver
        run: |
          VER=$(jq -r '.latest' out/latest.json)
          echo "version=$VER" >> "$GITHUB_OUTPUT"

      - name: Check remote latest
        id: diff
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
        run: |
          set -euo pipefail
          wrangler r2 object get --remote "${R2_BUCKET}/latest.json" --file prev_latest.json || echo '{}' > prev_latest.json
          PREV=$(jq -r '.latest // empty' prev_latest.json)
          CURR="${{ steps.ver.outputs.version }}"
          if [ -n "$PREV" ] && [ "$PREV" = "$CURR" ]; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload versioned JSON to R2
        if: steps.diff.outputs.changed == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
        run: |
          set -euo pipefail
          ROOT="out/gtfs/${{ steps.ver.outputs.version }}"
          find "$ROOT" -type f -name '*.json' | while read -r f; do
            key="gtfs/${{ steps.ver.outputs.version }}/${f##*/}"
            wrangler r2 object put --remote "${R2_BUCKET}/${key}" \
              --file "$f" \
              --cache-control "public, max-age=31536000, immutable" \
              --content-type "application/json"
          done

      - name: Upload pointers to R2
        if: steps.diff.outputs.changed == 'true'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          R2_BUCKET: ${{ secrets.R2_BUCKET }}
        run: |
          wrangler r2 object put --remote "${R2_BUCKET}/latest.json" \
            --file out/latest.json \
            --cache-control "public, max-age=60" \
            --content-type "application/json"
          wrangler r2 object put --remote "${R2_BUCKET}/status.json" \
            --file out/status.json \
            --cache-control "public, max-age=30" \
            --content-type "application/json"

      - name: Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: '4'
          command: deploy


      - name: Smoke test
        env:
          HOST: dartdublin-gtfs-api-endpoint.kgans.com
        run: |
          set -euo pipefail
          echo "== /__health =="
          curl -sS -i "https://${HOST}/__health" || true
          echo "== /latest.json (headers) =="
          curl -sS -i --fail-with-body "https://${HOST}/latest.json" || exit 1
          echo "== /latest.json (body) =="
          curl -sS --fail-with-body "https://${HOST}/latest.json" | tee /tmp/latest.json
          V=$(jq -r '.latest' /tmp/latest.json)
          echo "version=$V"
          echo "== /gtfs/${V}/stops.json (one item) =="
          curl -sS --fail-with-body "https://${HOST}/gtfs/${V}/stops.json" | jq '.[0]'
